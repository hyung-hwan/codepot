#!/usr/bin/perl

use strict;

use Config::Simple;
use DBI;
use File::Basename;
use POSIX qw(strftime);

my $CFG_FILE = '@CFGDIR@/codepot.ini';
my $REPO = $ARGV[0];
my $REPOBASE = basename($REPO);
my $REV = $ARGV[1];

my $QC = '';

sub get_config
{
	my $cfg = new Config::Simple();

	if (!$cfg->read ($CFG_FILE))
	{
		return undef;
	}

	my $config = {
		database_hostname => $cfg->param ("database_hostname"),
		database_port => $cfg->param ("database_port"),
		database_username => $cfg->param ("database_username"),
		database_password => $cfg->param ("database_password"),
		database_name => $cfg->param ("database_name"),
		database_driver => $cfg->param ("database_driver"),
		database_prefix => $cfg->param ("database_prefix")
	};

	return $config;
}

sub open_database
{
	my ($cfg) = @_;

	my $dbtype = $cfg->{database_driver};
	my $dbname = $cfg->{database_name};
	my $dbhost = $cfg->{database_hostname};
	my $dbport = $cfg->{database_port};

	if ($dbtype eq 'postgre') { $dbtype = 'Pg'; }
	elsif ($dbtype eq 'oci8') { $dbtype = 'Oracle'; }
	elsif ($dbtype eq 'mysqli') { $dbtype = 'mysql'; }

	my $dbstr;
	my $dbuser;
	my $dbpass;
	if ($dbtype eq 'Oracle')
	{
		$QC = '"';
		$dbstr = "DBI:$dbtype:";
		$dbuser = $cfg->{database_username} . '/' . $cfg->{database_password} . '@' . $dbhost;
		$dbpass = '';
	}
	else
	{
		$dbstr = "DBI:$dbtype:database=$dbname;";
		if (length($dbhost) > 0) { $dbstr .= "host=$dbhost;"; }
		if (length($dbport) > 0) { $dbstr .= "port=$dbport;"; }

		$dbuser = $cfg->{database_username};
		$dbpass = $cfg->{database_password};
	}

	my $dbh = DBI->connect(
		$dbstr, $dbuser, $dbpass,
		{ RaiseError => 0, PrintError => 0, AutoCommit => 0 }
	);

	return $dbh;
}

sub close_database
{
	my ($dbh) = @_;
	$dbh->disconnect ();
}

sub write_commit_log
{
	my ($dbh, $prefix, $projectid, $revision, $userid) = @_;

#+------+---------+-----------+---------------------------+---------------------+---------------+-----------------+
#| id   | type    | projectid | message                   | createdon           | action        | userid          |
#+------+---------+-----------+---------------------------+---------------------+---------------+-----------------+
#|  895 | code    | codepot   | svn,codepot,72            | 2011-10-10 14:26:43 | commit        | hyunghwan.chung | 

	my $message = "svn,$projectid,$revision";


	# the PHP side is executing ALTER SESSION SET NLS_TIMESTAMP_FORMAT='YYYY-MM-DD HH24:MI:SS.FF.
	# do i have to do it here or  use the database time (CURRENT_TIMESTAMP) instead?
	# make sure that you have the same time between the app server and the data server.
	# to minize side-effect of using the time of data server.
	#my $createdon = strftime ('%Y-%m-%d %H:%M:%S', localtime());

	$dbh->begin_work ();

	#my $query = $dbh->prepare ("INSERT INTO ${QC}${prefix}log${QC} (${QC}type${QC},${QC}projectid${QC},${QC}message${QC},${QC}createdon${QC},${QC}action${QC},${QC}userid${QC}) VALUES (?,?,?,?,?,?)");
	#if (!$query || !$query->execute ('code', $projectid, $message, $createdon, 'commit', $userid))

	my $query = $dbh->prepare ("INSERT INTO ${QC}${prefix}log${QC} (${QC}type${QC},${QC}projectid${QC},${QC}message${QC},${QC}createdon${QC},${QC}action${QC},${QC}userid${QC}) VALUES (?,?,?,CURRENT_TIMESTAMP,?,?)");
	if (!$query || !$query->execute ('code', $projectid, $message, 'commit', $userid))
	{
		my $errstr = $dbh->errstr();
		$query->finish ();
		$dbh->rollback ();
		return (-1, $errstr);
	}

	$query->finish ();
	$dbh->commit ();
	return (0, undef);
}

#------------------------------------------------------------
# MAIN
#------------------------------------------------------------

my $AUTHOR = `svnlook author -r "${REV}" "${REPO}"`;
chomp ($AUTHOR);

my $cfg = get_config ();
if (!defined($cfg))
{
	print (STDERR "Cannot load codepot configuration file\n");
	exit (1);
}

my $dbh = open_database ($cfg);
if (!defined($dbh))
{
	printf (STDERR "Cannot open database - %s\n", $DBI::errstr);
	exit (1);
}

write_commit_log ($dbh, $cfg->{database_prefix}, $REPOBASE, $REV, $AUTHOR);
close_database ($dbh);

exit (0);

